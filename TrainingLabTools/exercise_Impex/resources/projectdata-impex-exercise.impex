$productCatalog=electronicsProductCatalog
$catalogVersion=catalogversion(catalog(id[default=$productCatalog]),version[default='Staged'])[unique=true,default=$productCatalog:Staged]
$categorysupercategories=source(code, $catalogVersion)[unique=true]
$categories=target(code, $catalogVersion)[unique=true]


### TODO Step 1
# Create below a new category called sapSponsored and specify the following attributes:
#   code: must be unique and, for the verification script to work properly, it should be 'sapSponsored' (without the quotes)
#   name: a description in English
#   allowedPrincipals: the attribute is a reference to a principal entity, whose business key is 'uid'. The group you want is 'customergroup'
#   catalogVersion: use one of the macros above

#INSERT_UPDATE Category...
# values here...


$productsupercategories=supercategories(code, $catalogVersion)

### TODO Step 2
# Create a product that belong to the category you just created. You need the following attributes:
#   code: must be unique and, for the verification script to work properly, it should be 'commerceSDCard'
#   name: a description in English
#   catalogVersion: use one of the macros above
#   productsupercategories: a macro to use in the header was defined right above this exercise

#INSERT_UPDATE Product...
# values here...


$classCatalogVersion=catalogversion(catalog(id[default='ElectronicsClassification']),version[default='1.0'])[unique=true,default='ElectronicsClassification:1.0']
$classifyingsupercategories=source(code, $classCatalogVersion)[unique=true]

### warning: the statement below won't work if you had issues in Part 1 and your category wasn't created,
### so make sure you complete Part 1. Nothing to touch here!
INSERT_UPDATE CategoryCategoryRelation;$categories;$classifyingsupercategories
;sapSponsored;828

### Have a look at the following code and notice how we use a translator to import classification attributes
### (you'll use these in Step 3, below)
$clAttrModifiers=system='ElectronicsClassification',version='1.0',translator=de.hybris.platform.catalog.jalo.classification.impex.ClassificationAttributeTranslator, lang=en
$feature5=@Internal memory, 6[$clAttrModifiers];    # Internal memory in megabyte (MB)
$feature8=@Read speed, 1644[$clAttrModifiers];      # Read speed in megabyte per second (MB/s)
$feature9=@Flash card type, 2305[$clAttrModifiers]; # Flash card type

$approved=approvalstatus(code)[default='approved']

### TODO Step 3
# To understand how to link classification attributes to your product, UPDATE the product you just created
# you need to use the 'features' created above as part of header:
#   code: must be unique
#   feature5: internal memory, should be a number
#   feature8: read speed also a number
#   feature9: flash card type should be a string
#   catalogVersion: the same macro you used earlier
#   approved: the status of the product, can be 'unapproved', 'check' or 'approved'. Use the macro defined above Step 3

#UPDATE Product...
# values here...
