<?xml version="1.0" encoding="UTF-8"?>
<project name="Facades exercise tasks">
	
	<loadproperties srcfile="../lib/exercise.properties" />
	
	<!-- Import stop-server and clean-slate targets -->
	<import file="../lib/utility.xml"/>
		
	<path id="basedir.path">
		<pathelement path="${basedir}" />
	</path>
	<pathconvert property="currentDir" targetos="unix" refid="basedir.path" />	

	<!-- import task definitions to support if/then/else -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="../lib/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<!--variables -->
	<property name="extension.name" value="trainingfacades" />
	<property name="setup.source.dir" value="setup" />
	<property name="solution.source.dir" value="solution" />
	<property name="target.resdir" value="${hybris.root.path}/bin/custom/${extension.name}/resources/" />
	<property name="target.javadir" value="${hybris.root.path}/bin/custom/${extension.name}/src/" />	

	
	<!--###### Facades exercise setup ######-->
	<target name="setup" depends="generate_extension" description="copy starter Facades exercise">
		<!-- build the platform -->
		<ant antfile="build.xml" target="all" dir="${hybris.root.path}/bin/platform" />
	</target>
	
	
	<!--###### Facades exercise solution ######-->
	<target name="solution" depends="generate_extension,stop-server" description="copy completed Facades exercise">
			
		<!-- Create target directories -->
		<mkdir dir="${target.javadir}/my/commerce/${extension.name}/populators"/>

		<!-- copy Java source code -->
		<copy file="${solution.source.dir}/DefaultProductRestockEstimatePopulator.java" tofile="${target.javadir}/my/commerce/${extension.name}/populators/DefaultProductRestockEstimatePopulator.java" overwrite="true" />

		<!-- now copy Spring file -->
		<copy file="${solution.source.dir}/${extension.name}-spring.xml" tofile="${target.resdir}/${extension.name}-spring.xml" overwrite="true" />
		
		<!-- copy Beans file -->
		<copy file="${solution.source.dir}/${extension.name}-beans.xml" tofile="${target.resdir}/${extension.name}-beans.xml" overwrite="true" />

		<!-- copy Extension info -->
		<copy file="${solution.source.dir}/extensioninfo.xml" tofile="${hybris.root.path}/bin/custom/${extension.name}/extensioninfo.xml" overwrite="true" />

		<!-- copy Properties file-->
		<copy file="${solution.source.dir}/project.properties" tofile="${hybris.root.path}/bin/custom/${extension.name}/project.properties" overwrite="true" />

		<!-- build the platform -->
		<ant antfile="build.xml" target="all" dir="${hybris.root.path}/bin/platform">
		</ant>
			
	</target>


	<!--###### utility targets ######-->

	<target name="generate_extension" description="create fresh extension">

        <!-- Reset system back to a clean slate (state following setup) -->
        <antcall target="clean-slate"/>
        
        <!-- create archive directory if not already present -->
		<mkdir dir="${installation.folder}/archive"/>
		
		<!-- if extension already present in custom, timestamp and move to archive directory -->
		<if>
		    <available file="${hybris.root.path}/bin/custom/${extension.name}" type="dir" />
		    <then>
                <!-- archive extension folder (if present) -->
                <tstamp>
        	        <format property="TIMESTAMP" pattern="yyyy.MM.dd_hh.mm"/>
                </tstamp>
                <move file="${hybris.root.path}/bin/custom/${extension.name}"
        	        tofile="${installation.folder}/archive/${extension.name}_${TIMESTAMP}"/>
        	</then>
        </if>

		<!-- remove ${extension.name} from localextensions.xml (if present) -->		
		<java classname="groovy.ui.GroovyMain">
			<classpath>
				<pathelement location="../lib/groovy-4.0.3.jar" />
				<pathelement location="../lib/groovy-xml-4.0.3.jar" />
			</classpath>
			<arg value="../lib/update_localextensions.groovy" />
			<arg value="remove" />
			<arg value="${extension.name}" />
			<arg value="${hybris.root.path}/config/localextensions.xml"/>
		</java>

		<!-- clean the platform -->
		<ant antfile="build.xml" target="clean" dir="${hybris.root.path}/bin/platform" />

		<!-- generate the example extension -->
		<ant antfile="build.xml" target="extgen" dir="${hybris.root.path}/bin/platform">
			<property name="input.template" value="yempty" />
			<property name="input.name" value="${extension.name}" />
			<property name="input.package" value="my.commerce.${extension.name}" />
			<property name="ext.yempty.path" value="${yempty.dir}" />		
		</ant>

		<!-- add ${extension.name} to localextensions.xml -->
		<java classname="groovy.ui.GroovyMain">
			<classpath>
				<pathelement location="../lib/groovy-4.0.3.jar"/>
				<pathelement location="../lib/groovy-xml-4.0.3.jar" />
			</classpath>
			<arg value="../lib/update_localextensions.groovy"/>
			<arg value="add"/>
			<arg value="${extension.name}"/>
			<arg value="${hybris.root.path}/config/localextensions.xml"/>
		</java>

		<!-- defer building the platform -->

	</target>
	
</project>