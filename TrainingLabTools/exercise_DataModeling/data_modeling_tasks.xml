<?xml version="1.0" encoding="UTF-8"?>
<project name="Data Modeling exercise tasks" default="setup">

	<loadproperties srcfile="../lib/exercise.properties" />
	
	<!-- Import stop-server and clean-slate targets -->
	<import file="../lib/utility.xml"/>
	
	<path id="basedir.path">
		<pathelement path="${basedir}" />
	</path>
	<pathconvert property="currentDir" targetos="unix" refid="basedir.path" />

	<!-- import task definitions to support if/then/else -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="../lib/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<!--variables -->
	<property name="extension.name" value="trainingdatamodeling" />
	<property name="setup.source.dir" value="setup" />
	<property name="solution.source.dir" value="solution" />
	<property name="target.resdir" value="${hybris.root.path}/bin/custom/${extension.name}/resources/" />
	<property name="target.javadir" value="${hybris.root.path}/bin/custom/${extension.name}/src/" />


	<!--###### Data Modeling Exercise setup ######-->

	<target name="setup" depends="generate_extension" description="copy starter example exercise">

		<!-- now copy Items file -->
		<copy file="${setup.source.dir}/${extension.name}-items.xml" tofile="${target.resdir}/${extension.name}-items.xml" overwrite="true" />

		<!-- copy localization file-->
		<copy file="${setup.source.dir}/${extension.name}-locales_en.properties" tofile="${target.resdir}/localization/${extension.name}-locales_en.properties" overwrite="true" />


		<!-- build the platform only if you need impex files loaded (with updatesystem) -->

	</target>



	<!--###### Data Modeling Exercise solution ######-->


	<target name="solution" depends="generate_extension,stop-server" description="copy finished Example exercise">

		<!-- now copy localization file -->
		<copy file="${solution.source.dir}/${extension.name}-items.xml" tofile="${target.resdir}/${extension.name}-items.xml" overwrite="true" />

		<!-- copy ImpEx file-->
		<copy file="${solution.source.dir}/${extension.name}-locales_en.properties" tofile="${target.resdir}/localization/${extension.name}-locales_en.properties" overwrite="true" />

		<!-- build the platform -->
		<ant antfile="build.xml" target="updatesystem" dir="${hybris.root.path}/bin/platform">
		   <property name="configFile" value="${currentDir}/${solution.source.dir}/config.json" />
		</ant>

	</target>


	<!--###### utility targets ######-->


	<target name="generate_extension" description="Generate exercise extension">

        <!-- Reset system back to a clean slate (state following setup) -->
        <antcall target="clean-slate"/>

        <!-- create archive directory if not already present -->
		<mkdir dir="${installation.folder}/archive"/>

		<!-- if extension already present in custom, timestamp and move to archive directory -->
		<if>
		    <available file="${hybris.root.path}/bin/custom/${extension.name}" type="dir" />
		    <then>
                <!-- archive wcms folder (if present) -->
                <tstamp>
        	        <format property="TIMESTAMP" pattern="yyyy.MM.dd_hh.mm"/>
                </tstamp>
                <move file="${hybris.root.path}/bin/custom/${extension.name}"
        	        tofile="${installation.folder}/archive/${extension.name}_${TIMESTAMP}"/>
        	</then>
        </if>

		<!-- remove ${extension.name} from localextensions.xml (if present) -->
		<java classname="groovy.ui.GroovyMain">
			<classpath>
				<pathelement location="../lib/groovy-4.0.3.jar" />
				<pathelement location="../lib/groovy-xml-4.0.3.jar" />
			</classpath>
			<arg value="../lib/update_localextensions.groovy" />
			<arg value="remove" />
			<arg value="${extension.name}" />
			<arg value="${hybris.root.path}/config/localextensions.xml" />
		</java>

		<!-- clean the platform -->
		<!-- note: this deletes the hybris/bin/platform/bootstrap/gensrc folder -->
		<ant antfile="build.xml" target="clean" dir="${hybris.root.path}/bin/platform" />

		<!-- generate the example extension -->
		<ant antfile="build.xml" target="extgen" dir="${hybris.root.path}/bin/platform">
			<property name="input.template" value="yempty" />
			<property name="input.name" value="${extension.name}" />
			<property name="input.package" value="my.commerce.${extension.name}" />
			<property name="ext.yempty.path" value="${yempty.dir}" />
		</ant>

		<!-- add ${extension.name} to localextensions.xml -->
		<java classname="groovy.ui.GroovyMain">
			<classpath>
				<pathelement location="../lib/groovy-4.0.3.jar"/>
				<pathelement location="../lib/groovy-xml-4.0.3.jar" />
			</classpath>
			<arg value="../lib/update_localextensions.groovy"/>
			<arg value="add"/>
			<arg value="${extension.name}"/>
			<arg value="${hybris.root.path}/config/localextensions.xml"/>
		</java>

		<!-- build the platform -->
		<!-- At this point, there SEEMS to be nothing to build, BUT...
		     we need to at least regenerate the hybris/bin/platform/bootstrap/gensrc folder,
		     otherwise Eclipse builds will fail (until we do an "ant all") 
		     AND student will waste all kinds of time trying to get Eclipse to 
		     build, despite our telling them not to try. -->
		<ant antfile="build.xml" target="all" dir="${hybris.root.path}/bin/platform" />

	</target>

</project>
