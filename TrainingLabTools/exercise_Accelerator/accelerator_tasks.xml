<?xml version="1.0" encoding="UTF-8"?>
<project name="Accelerator exercise tasks">

	<loadproperties srcfile="../lib/exercise.properties" />

	<!-- Import stop-server and clean-slate targets -->
	<import file="../lib/utility.xml"/>

	<path id="basedir.path">
		<pathelement path="${basedir}" />
	</path>
	<pathconvert property="currentExerciseDir" targetos="unix" refid="basedir.path" />

    <!-- exercise site is a fictitious site called MegaCorp -->
    <property name="site.name" value="megacorp"/>
	<property name="extension.names" value="${site.name}backoffice,${site.name}core,${site.name}facades,${site.name}fulfilmentprocess,${site.name}initialdata,${site.name}storefront" />
	<property name="extension.ynames" value="yacceleratorbackoffice,yacceleratorinitialdata,yacceleratorfulfilmentprocess,yacceleratorstorefront" />

    <property name="common.source.dir" value="resources" />
    <property name="solution.source.dir" value="solution" />
    <property name="verification.source.dir" value="verification" />
	<property name="target.resdir" value="${exercise.projects}/${site.name}/${site.name}initialdata/resources/${site.name}initialdata/import" />
	<property name="target.javadir" value="${exercise.projects}/${site.name}/${site.name}initialdata/src" />

	<!-- import task definitions -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="../lib/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<!--###### Accelerator Exercise - Generating an Accelerator-based site setup ######-->

	<target name="setup" depends="stop-server" description="Cleanup before student installs site">

        <!-- Reset system back to a clean slate (state following setup) -->
        <antcall target="clean-slate"/>

        <!-- Remove existing site, if setup is being run a second time -->
		<if>
 			<available file="${exercise.projects}/${site.name}" type="dir" />
			<then>
			    <delete dir="${exercise.projects}/${site.name}" />
  			</then>
		</if>

    </target>


	<!--###### Accelerator Exercise - Generating an Accelerator-based site solution ######-->

	<!-- <target name="solution" depends="generate_module" description="Complete Accelerator exercise"> -->
	<target name="solution" depends="setup, generate_module" description="Complete Accelerator exercise">

        <!-- Copy Setup java file -->
        <copy file="${common.source.dir}/InitialDataSystemSetup.java"
            tofile="${target.javadir}/my/${site.name}/initialdata/setup/InitialDataSystemSetup.java" overwrite="true" />

        <!-- Copy local.properties to set website url -->
        <copy file="${solution.source.dir}/local.properties"
            tofile="${hybris.root.path}/config/local.properties" overwrite="true" />

        <!-- Copy setup Core data -->
        <copy todir="${target.resdir}/coredata/common" >
            <fileset dir="${common.source.dir}/coredata/common"/>
        </copy>
        <copy todir="${target.resdir}/coredata/contentCatalogs" >
            <fileset dir="${common.source.dir}/coredata/contentCatalogs"/>
        </copy>
        <copy todir="${target.resdir}/coredata/productCatalogs" >
            <fileset dir="${common.source.dir}/coredata/productCatalogs"/>
        </copy>
        <copy todir="${target.resdir}/coredata/stores" >
            <fileset dir="${common.source.dir}/coredata/stores"/>
        </copy>

        <!-- Copy setup Sample data -->
        <mkdir dir="${target.resdir}/sampledata/backoffice"/>
        <copy todir="${target.resdir}/sampledata/backoffice" >
            <fileset dir="${common.source.dir}/sampledata/backoffice"/>
        </copy>
        <mkdir dir="${target.resdir}/sampledata/cockpits"/>
        <copy todir="${target.resdir}/sampledata/cockpits" >
            <fileset dir="${common.source.dir}/sampledata/cockpits"/>
        </copy>
        <copy todir="${target.resdir}/sampledata/contentCatalogs" >
            <fileset dir="${common.source.dir}/sampledata/contentCatalogs"/>
        </copy>
        <copy todir="${target.resdir}/sampledata/productCatalogs" >
            <fileset dir="${common.source.dir}/sampledata/productCatalogs"/>
        </copy>
        <copy todir="${target.resdir}/sampledata/stores" >
            <fileset dir="${common.source.dir}/sampledata/stores"/>
        </copy>


		<mkdir dir="${hybris.root.path}/bin/platform/.sass-cache"/>

		<!-- build the platform and updatesystem -->
		<ant antfile="build.xml" target="initialize" dir="${hybris.root.path}/bin/platform">
		</ant>

		<!-- load the verification scripts -->
		<antcall target="verification"/>

		<echo>Accelerator exercise solution completed.</echo>
	</target>

	<target name="verification"  description="loads verification scripts into the system">
	    	<path id="basedir.path">
	    	    <pathelement path="${basedir}" />
	    	</path>
	    	<pathconvert targetos="unix" property="basedir.slashed" refid="basedir.path" />
	    	<ant antfile="build.xml" target="importImpex" dir="${hybris.root.path}/bin/platform" >
					<property name="resource" value="${basedir.slashed}/../class_setup/${verification.source.dir}/verifyExercises.impex" />
			</ant>
			<copy file="${basedir.slashed}/../class_setup/${verification.source.dir}/Logger.groovy" tofile="${hybris.root.path}/bin/platform/Logger.groovy" overwrite="true" />
	</target>


	<!--###### Accelerator Exercise - utility targets ######-->


	<target name="generate_module" description="Generate module for this exercise">

        <!-- Reset system back to a clean slate (state following setup) -->
        <antcall target="clean-slate"/>

		<if>
 			<available file="${exercise.projects}/${site.name}" type="dir" />
			<then>
			    <delete dir="${exercise.projects}/${site.name}" />
  			</then>
		</if>

		<!-- remove ${extension.names} + test extension to localextensions.xml  -->
		<java classname="groovy.ui.GroovyMain">
			<classpath>
				<pathelement location="../lib/groovy-4.0.3.jar" />
				<pathelement location="../lib/groovy-xml-4.0.3.jar" />
			</classpath>
			<arg value="../lib/update_localextensions.groovy" />
			<arg value="remove" />
			<arg value="${extension.names},${site.name}test"/>
			<arg value="${hybris.root.path}/config/localextensions.xml"/>
		</java>

		<!-- add ${extension.ynames} + electronicsstore from localextensions.xml
		     (in case they've been removed during previous run)-->
		<java classname="groovy.ui.GroovyMain">
			<classpath>
				<pathelement location="../lib/groovy-4.0.3.jar"/>
				<pathelement location="../lib/groovy-xml-4.0.3.jar" />
			</classpath>
			<arg value="../lib/update_localextensions.groovy"/>
			<arg value="add"/>
			<arg value="${extension.ynames},electronicsstore"/>
			<arg value="${hybris.root.path}/config/localextensions.xml"/>
		</java>

		<!-- clean the platform -->
		<ant antfile="build.xml" target="clean" dir="${hybris.root.path}/bin/platform" />

		<!-- generate module -->
		<ant antfile="build.xml" target="modulegen" dir="${hybris.root.path}/bin/platform">
			<property name="input.module" value="accelerator" />
			<property name="input.name" value="${site.name}" />
			<property name="input.package" value="my.${site.name}" />
		</ant>

		<!-- add ${extension.names} to localextensions.xml -->
		<java classname="groovy.ui.GroovyMain">
			<classpath>
				<pathelement location="../lib/groovy-4.0.3.jar"/>
				<pathelement location="../lib/groovy-xml-4.0.3.jar" />
			</classpath>
			<arg value="../lib/update_localextensions.groovy"/>
			<arg value="add"/>
			<arg value="${extension.names}"/>
			<arg value="${hybris.root.path}/config/localextensions.xml"/>
		</java>

		<!-- remove ${extension.ynames} + electronicsstore from localextensions.xml -->
		<java classname="groovy.ui.GroovyMain">
			<classpath>
				<pathelement location="../lib/groovy-4.0.3.jar" />
				<pathelement location="../lib/groovy-xml-4.0.3.jar" />
			</classpath>
			<arg value="../lib/update_localextensions.groovy" />
			<arg value="remove" />
			<arg value="${extension.ynames},electronicsstore"/>
			<arg value="${hybris.root.path}/config/localextensions.xml"/>
		</java>
		<!-- defer building the platform -->

	</target>

</project>
